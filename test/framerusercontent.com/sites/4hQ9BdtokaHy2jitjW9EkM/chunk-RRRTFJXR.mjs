import{B as m,E as y0,X as w0}from"./chunk-K4NCUN6G.mjs";import{c as O}from"./chunk-ELYU6EKT.mjs";var b0,_0,O1,f1,B,ne=Object.create,C0=Object.defineProperty,ie=Object.getOwnPropertyDescriptor,K0=Object.getOwnPropertyNames,oe=Object.getPrototypeOf,ae=Object.prototype.hasOwnProperty,c1=(e,t)=>function(){return t||(0,e[K0(e)[0]])((t={exports:{}}).exports,t),t.exports},se=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of K0(t))ae.call(e,s)||s===r||C0(e,s,{get:()=>t[s],enumerable:!(n=ie(t,s))||n.enumerable});return e},i0=(e,t,r)=>(r=e!=null?ne(oe(e)):{},se(!t&&e&&e.__esModule?r:C0(r,"default",{value:e,enumerable:!0}),e)),le=c1({"../../../node_modules/dataloader/index.js"(e,t){var r,n=function(){function f(o,l){if(typeof o!="function")throw TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but got: "+o+".");this._batchLoadFn=o,this._maxBatchSize=function(u){if(!(!u||u.batch!==!1))return 1;var c=u&&u.maxBatchSize;if(c===void 0)return 1/0;if(typeof c!="number"||c<1)throw TypeError("maxBatchSize must be a positive number: "+c);return c}(l),this._batchScheduleFn=function(u){var c=u&&u.batchScheduleFn;if(c===void 0)return s;if(typeof c!="function")throw TypeError("batchScheduleFn must be a function: "+c);return c}(l),this._cacheKeyFn=function(u){var c=u&&u.cacheKeyFn;if(c===void 0)return function(y){return y};if(typeof c!="function")throw TypeError("cacheKeyFn must be a function: "+c);return c}(l),this._cacheMap=function(u){if(!(!u||u.cache!==!1))return null;var c=u&&u.cacheMap;if(c===void 0)return new Map;if(c!==null){var y=["get","set","delete","clear"].filter(function(d){return c&&typeof c[d]!="function"});if(y.length!==0)throw TypeError("Custom cacheMap missing methods: "+y.join(", "))}return c}(l),this._batch=null,this.name=l&&l.name?l.name:null}var a=f.prototype;return a.load=function(o){if(o==null)throw TypeError("The loader.load() function must be called with a value, but got: "+String(o)+".");var l=function(b){var w=b._batch;if(w!==null&&!w.hasDispatched&&w.keys.length<b._maxBatchSize)return w;var T={hasDispatched:!1,keys:[],callbacks:[]};return b._batch=T,b._batchScheduleFn(function(){(function(k,_){var v;if(_.hasDispatched=!0,_.keys.length===0){h(_);return}try{v=k._batchLoadFn(_.keys)}catch(I){return i(k,_,TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function errored synchronously: "+String(I)+"."))}if(!v||typeof v.then!="function")return i(k,_,TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise: "+String(v)+"."));v.then(function(I){if(!p(I))throw TypeError("DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array: "+String(I)+".");if(I.length!==_.keys.length)throw TypeError(`DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array of the same length as the Array of keys.

Keys:
`+String(_.keys)+`

Values:
`+String(I));h(_);for(var x=0;x<_.callbacks.length;x++){var S=I[x];S instanceof Error?_.callbacks[x].reject(S):_.callbacks[x].resolve(S)}}).catch(function(I){i(k,_,I)})})(b,T)}),T}(this),u=this._cacheMap,c=this._cacheKeyFn(o);if(u){var y=u.get(c);if(y){var d=l.cacheHits||(l.cacheHits=[]);return new Promise(function(b){d.push(function(){b(y)})})}}l.keys.push(o);var g=new Promise(function(b,w){l.callbacks.push({resolve:b,reject:w})});return u&&u.set(c,g),g},a.loadMany=function(o){if(!p(o))throw TypeError("The loader.loadMany() function must be called with Array<key> but got: "+o+".");for(var l=[],u=0;u<o.length;u++)l.push(this.load(o[u]).catch(function(c){return c}));return Promise.all(l)},a.clear=function(o){var l=this._cacheMap;if(l){var u=this._cacheKeyFn(o);l.delete(u)}return this},a.clearAll=function(){var o=this._cacheMap;return o&&o.clear(),this},a.prime=function(o,l){var u=this._cacheMap;if(u){var c,y=this._cacheKeyFn(o);u.get(y)===void 0&&(l instanceof Error?(c=Promise.reject(l)).catch(function(){}):c=Promise.resolve(l),u.set(y,c))}return this},f}(),s=typeof process=="object"&&typeof process.nextTick=="function"?function(f){r||(r=Promise.resolve()),r.then(function(){process.nextTick(f)})}:typeof setImmediate=="function"?function(f){setImmediate(f)}:function(f){setTimeout(f)};function i(f,a,o){h(a);for(var l=0;l<a.keys.length;l++)f.clear(a.keys[l]),a.callbacks[l].reject(o)}function h(f){if(f.cacheHits)for(var a=0;a<f.cacheHits.length;a++)f.cacheHits[a]()}function p(f){return typeof f=="object"&&f!==null&&typeof f.length=="number"&&(f.length===0||f.length>0&&Object.prototype.hasOwnProperty.call(f,f.length-1))}t.exports=n}}),ue=c1({"../../../node_modules/splaytree/dist/splay.js"(e,t){var r;r=function(){var n=function(f,a){this.next=null,this.key=f,this.data=a,this.left=null,this.right=null};function s(f,a){return f>a?1:f<a?-1:0}function i(f,a,o){for(var l=new n(null,null),u=l,c=l;;){var y=o(f,a.key);if(y<0){if(a.left===null)break;if(0>o(f,a.left.key)){var d=a.left;if(a.left=d.right,d.right=a,(a=d).left===null)break}c.left=a,c=a,a=a.left}else if(y>0){if(a.right===null)break;if(o(f,a.right.key)>0){var d=a.right;if(a.right=d.left,d.left=a,(a=d).right===null)break}u.right=a,u=a,a=a.right}else break}return u.right=a.left,c.left=a.right,a.left=l.right,a.right=l.left,a}function h(f,a,o,l){var u=new n(f,a);if(o===null)return u.left=u.right=null,u;o=i(f,o,l);var c=l(f,o.key);return c<0?(u.left=o.left,u.right=o,o.left=null):c>=0&&(u.right=o.right,u.left=o,o.right=null),u}function p(f,a,o){var l=null,u=null;if(a){a=i(f,a,o);var c=o(a.key,f);c===0?(l=a.left,u=a.right):c<0?(u=a.right,a.right=null,l=a):(l=a.left,a.left=null,u=a)}return{left:l,right:u}}return function(){function f(a){a===void 0&&(a=s),this._root=null,this._size=0,this._comparator=a}return f.prototype.insert=function(a,o){return this._size++,this._root=h(a,o,this._root,this._comparator)},f.prototype.add=function(a,o){var l=new n(a,o);this._root===null&&(l.left=l.right=null,this._size++,this._root=l);var u=this._comparator,c=i(a,this._root,u),y=u(a,c.key);return y===0?this._root=c:(y<0?(l.left=c.left,l.right=c,c.left=null):y>0&&(l.right=c.right,l.left=c,c.right=null),this._size++,this._root=l),this._root},f.prototype.remove=function(a){this._root=this._remove(a,this._root,this._comparator)},f.prototype._remove=function(a,o,l){var u;return o===null?null:(o=i(a,o,l),l(a,o.key)===0?(o.left===null?u=o.right:(u=i(a,o.left,l)).right=o.right,this._size--,u):o)},f.prototype.pop=function(){var a=this._root;if(a){for(;a.left;)a=a.left;return this._root=i(a.key,this._root,this._comparator),this._root=this._remove(a.key,this._root,this._comparator),{key:a.key,data:a.data}}return null},f.prototype.findStatic=function(a){for(var o=this._root,l=this._comparator;o;){var u=l(a,o.key);if(u===0)return o;o=u<0?o.left:o.right}return null},f.prototype.find=function(a){return this._root&&(this._root=i(a,this._root,this._comparator),this._comparator(a,this._root.key)!==0)?null:this._root},f.prototype.contains=function(a){for(var o=this._root,l=this._comparator;o;){var u=l(a,o.key);if(u===0)return!0;o=u<0?o.left:o.right}return!1},f.prototype.forEach=function(a,o){for(var l=this._root,u=[],c=!1;!c;)l!==null?(u.push(l),l=l.left):u.length!==0?(l=u.pop(),a.call(o,l),l=l.right):c=!0;return this},f.prototype.range=function(a,o,l,u){for(var c=[],y=this._comparator,d=this._root;c.length!==0||d;)if(d)c.push(d),d=d.left;else{if(y((d=c.pop()).key,o)>0)break;if(y(d.key,a)>=0&&l.call(u,d))return this;d=d.right}return this},f.prototype.keys=function(){var a=[];return this.forEach(function(o){var l=o.key;return a.push(l)}),a},f.prototype.values=function(){var a=[];return this.forEach(function(o){var l=o.data;return a.push(l)}),a},f.prototype.min=function(){return this._root?this.minNode(this._root).key:null},f.prototype.max=function(){return this._root?this.maxNode(this._root).key:null},f.prototype.minNode=function(a){if(a===void 0&&(a=this._root),a)for(;a.left;)a=a.left;return a},f.prototype.maxNode=function(a){if(a===void 0&&(a=this._root),a)for(;a.right;)a=a.right;return a},f.prototype.at=function(a){for(var o=this._root,l=!1,u=0,c=[];!l;)if(o)c.push(o),o=o.left;else if(c.length>0){if(o=c.pop(),u===a)return o;u++,o=o.right}else l=!0;return null},f.prototype.next=function(a){var o=this._root,l=null;if(a.right){for(l=a.right;l.left;)l=l.left;return l}for(var u=this._comparator;o;){var c=u(a.key,o.key);if(c===0)break;c<0?(l=o,o=o.left):o=o.right}return l},f.prototype.prev=function(a){var o=this._root,l=null;if(a.left!==null){for(l=a.left;l.right;)l=l.right;return l}for(var u=this._comparator;o;){var c=u(a.key,o.key);if(c===0)break;c<0?o=o.left:(l=o,o=o.right)}return l},f.prototype.clear=function(){return this._root=null,this._size=0,this},f.prototype.toList=function(){return function(a){for(var o=a,l=[],u=!1,c=new n(null,null),y=c;!u;)o?(l.push(o),o=o.left):l.length>0?o=(o=y=y.next=l.pop()).right:u=!0;return y.next=null,c.next}(this._root)},f.prototype.load=function(a,o,l){o===void 0&&(o=[]),l===void 0&&(l=!1);var u=a.length,c=this._comparator;if(l&&function d(g,b,w,T,k){if(!(w>=T)){for(var _=g[w+T>>1],v=w-1,I=T+1;;){do v++;while(0>k(g[v],_));do I--;while(k(g[I],_)>0);if(v>=I)break;var x=g[v];g[v]=g[I],g[I]=x,x=b[v],b[v]=b[I],b[I]=x}d(g,b,w,I,k),d(g,b,I+1,T,k)}}(a,o,0,u-1,c),this._root===null)this._root=function d(g,b,w,T){var k=T-w;if(k>0){var _=w+Math.floor(k/2),v=g[_],I=b[_],x=new n(v,I);return x.left=d(g,b,w,_),x.right=d(g,b,_+1,T),x}return null}(a,o,0,u),this._size=u;else{var y=function(d,g,b){for(var w=new n(null,null),T=w,k=d,_=g;k!==null&&_!==null;)0>b(k.key,_.key)?(T.next=k,k=k.next):(T.next=_,_=_.next),T=T.next;return k!==null?T.next=k:_!==null&&(T.next=_),w.next}(this.toList(),function(d,g){for(var b=new n(null,null),w=b,T=0;T<d.length;T++)w=w.next=new n(d[T],g[T]);return w.next=null,b.next}(a,o),c);u=this._size+u,this._root=function d(g,b,w){var T=w-b;if(T>0){var k=b+Math.floor(T/2),_=d(g,b,k),v=g.head;return v.left=_,g.head=g.head.next,v.right=d(g,k+1,w),v}return null}({head:y},0,u)}return this},f.prototype.isEmpty=function(){return this._root===null},Object.defineProperty(f.prototype,"size",{get:function(){return this._size},enumerable:!0,configurable:!0}),Object.defineProperty(f.prototype,"root",{get:function(){return this._root},enumerable:!0,configurable:!0}),f.prototype.toString=function(a){a===void 0&&(a=function(l){return String(l.key)});var o=[];return function l(u,c,y,d,g){if(u){d(""+c+(y?"\u2514\u2500\u2500 ":"\u251C\u2500\u2500 ")+g(u)+`
`);var b=c+(y?"    ":"\u2502   ");u.left&&l(u.left,b,!1,d,g),u.right&&l(u.right,b,!0,d,g)}}(this._root,"",!0,function(l){return o.push(l)},a),o.join("")},f.prototype.update=function(a,o,l){var u,c,y=this._comparator,d=p(a,this._root,y),g=d.left,b=d.right;0>y(a,o)?b=h(o,l,b,y):g=h(o,l,g,y),this._root=(u=g,(c=b)===null?u:(u===null||((c=i(u.key,c,y)).left=u),c))},f.prototype.split=function(a){return p(a,this._root,this._comparator)},f.prototype[Symbol.iterator]=function(){var a,o,l;return function(u,c){var y,d,g,b,w={label:0,sent:function(){if(1&g[0])throw g[1];return g[1]},trys:[],ops:[]};return b={next:T(0),throw:T(1),return:T(2)},typeof Symbol=="function"&&(b[Symbol.iterator]=function(){return this}),b;function T(k){return function(_){return function(v){if(y)throw TypeError("Generator is already executing.");for(;w;)try{if(y=1,d&&(g=2&v[0]?d.return:v[0]?d.throw||((g=d.return)&&g.call(d),0):d.next)&&!(g=g.call(d,v[1])).done)return g;switch(d=0,g&&(v=[2&v[0],g.value]),v[0]){case 0:case 1:g=v;break;case 4:return w.label++,{value:v[1],done:!1};case 5:w.label++,d=v[1],v=[0];continue;case 7:v=w.ops.pop(),w.trys.pop();continue;default:if(!(g=(g=w.trys).length>0&&g[g.length-1])&&(v[0]===6||v[0]===2)){w=0;continue}if(v[0]===3&&(!g||v[1]>g[0]&&v[1]<g[3])){w.label=v[1];break}if(v[0]===6&&w.label<g[1]){w.label=g[1],g=v;break}if(g&&w.label<g[2]){w.label=g[2],w.ops.push(v);break}g[2]&&w.ops.pop(),w.trys.pop();continue}v=c.call(u,w)}catch(I){v=[6,I],d=0}finally{y=g=0}if(5&v[0])throw v[1];return{value:v[0]?v[1]:void 0,done:!0}}([k,_])}}}(this,function(u){switch(u.label){case 0:a=this._root,o=[],l=!1,u.label=1;case 1:return l?[3,6]:a===null?[3,2]:(o.push(a),a=a.left,[3,5]);case 2:return o.length===0?[3,4]:[4,a=o.pop()];case 3:return u.sent(),a=a.right,[3,5];case 4:l=!0,u.label=5;case 5:return[3,1];case 6:return[2]}})},f}()},typeof e=="object"&&t!==void 0?t.exports=r():typeof define=="function"&&define.amd?define(r):e.SplayTree=r()}}),N1=c1({"../../../node_modules/whatwg-mimetype/lib/utils.js"(e){e.removeLeadingAndTrailingHTTPWhitespace=t=>t.replace(/^[ \t\n\r]+/u,"").replace(/[ \t\n\r]+$/u,""),e.removeTrailingHTTPWhitespace=t=>t.replace(/[ \t\n\r]+$/u,""),e.isHTTPWhitespaceChar=t=>t===" "||t==="	"||t===`
`||t==="\r",e.solelyContainsHTTPTokenCodePoints=t=>/^[-!#$%&'*+.^_`|~A-Za-z0-9]*$/u.test(t),e.soleyContainsHTTPQuotedStringTokenCodePoints=t=>/^[\t\u0020-\u007E\u0080-\u00FF]*$/u.test(t),e.asciiLowercase=t=>t.replace(/[A-Z]/ug,r=>r.toLowerCase()),e.collectAnHTTPQuotedString=(t,r)=>{let n="";for(r++;;){for(;r<t.length&&t[r]!=='"'&&t[r]!=="\\";)n+=t[r],++r;if(r>=t.length)break;let s=t[r];if(++r,s==="\\"){if(r>=t.length){n+="\\";break}n+=t[r],++r}else break}return[n,r]}}}),fe=c1({"../../../node_modules/whatwg-mimetype/lib/mime-type-parameters.js"(e,t){var{asciiLowercase:r,solelyContainsHTTPTokenCodePoints:n,soleyContainsHTTPQuotedStringTokenCodePoints:s}=N1();t.exports=class{get size(){return this._map.size}get(i){return i=r(String(i)),this._map.get(i)}has(i){return i=r(String(i)),this._map.has(i)}set(i,h){if(i=r(String(i)),h=String(h),!n(i))throw Error(`Invalid MIME type parameter name "${i}": only HTTP token code points are valid.`);if(!s(h))throw Error(`Invalid MIME type parameter value "${h}": only HTTP quoted-string token code points are valid.`);return this._map.set(i,h)}clear(){this._map.clear()}delete(i){return i=r(String(i)),this._map.delete(i)}forEach(i,h){this._map.forEach(i,h)}keys(){return this._map.keys()}values(){return this._map.values()}entries(){return this._map.entries()}[Symbol.iterator](){return this._map[Symbol.iterator]()}constructor(i){this._map=i}}}}),he=c1({"../../../node_modules/whatwg-mimetype/lib/parser.js"(e,t){var{removeLeadingAndTrailingHTTPWhitespace:r,removeTrailingHTTPWhitespace:n,isHTTPWhitespaceChar:s,solelyContainsHTTPTokenCodePoints:i,soleyContainsHTTPQuotedStringTokenCodePoints:h,asciiLowercase:p,collectAnHTTPQuotedString:f}=N1();t.exports=a=>{a=r(a);let o=0,l="";for(;o<a.length&&a[o]!=="/";)l+=a[o],++o;if(l.length===0||!i(l)||o>=a.length)return null;++o;let u="";for(;o<a.length&&a[o]!==";";)u+=a[o],++o;if((u=n(u)).length===0||!i(u))return null;let c={type:p(l),subtype:p(u),parameters:new Map};for(;o<a.length;){for(++o;s(a[o]);)++o;let y="";for(;o<a.length&&a[o]!==";"&&a[o]!=="=";)y+=a[o],++o;if(y=p(y),o<a.length){if(a[o]===";")continue;++o}let d=null;if(a[o]==='"')for([d,o]=f(a,o);o<a.length&&a[o]!==";";)++o;else{for(d="";o<a.length&&a[o]!==";";)d+=a[o],++o;if((d=n(d))==="")continue}y.length>0&&i(y)&&h(d)&&!c.parameters.has(y)&&c.parameters.set(y,d)}return c}}}),ce=c1({"../../../node_modules/whatwg-mimetype/lib/serializer.js"(e,t){var{solelyContainsHTTPTokenCodePoints:r}=N1();t.exports=n=>{let s=`${n.type}/${n.subtype}`;if(n.parameters.size===0)return s;for(let[i,h]of n.parameters)s+=";"+i+"=",r(h)&&h.length!==0||(h=h.replace(/(["\\])/ug,"\\$1"),h=`"${h}"`),s+=h;return s}}}),pe=c1({"../../../node_modules/whatwg-mimetype/lib/mime-type.js"(e,t){var r=fe(),n=he(),s=ce(),{asciiLowercase:i,solelyContainsHTTPTokenCodePoints:h}=N1();t.exports=class{static parse(p){try{return new this(p)}catch{return null}}get essence(){return`${this.type}/${this.subtype}`}get type(){return this._type}set type(p){if((p=i(String(p))).length===0)throw Error("Invalid type: must be a non-empty string");if(!h(p))throw Error(`Invalid type ${p}: must contain only HTTP token code points`);this._type=p}get subtype(){return this._subtype}set subtype(p){if((p=i(String(p))).length===0)throw Error("Invalid subtype: must be a non-empty string");if(!h(p))throw Error(`Invalid subtype ${p}: must contain only HTTP token code points`);this._subtype=p}get parameters(){return this._parameters}toString(){return s(this)}isJavaScript({prohibitParameters:p=!1}={}){switch(this._type){case"text":switch(this._subtype){case"ecmascript":case"javascript":case"javascript1.0":case"javascript1.1":case"javascript1.2":case"javascript1.3":case"javascript1.4":case"javascript1.5":case"jscript":case"livescript":case"x-ecmascript":case"x-javascript":return!p||this._parameters.size===0;default:return!1}case"application":switch(this._subtype){case"ecmascript":case"javascript":case"x-ecmascript":case"x-javascript":return!p||this._parameters.size===0;default:return!1}default:return!1}}isXML(){return this._subtype==="xml"&&(this._type==="text"||this._type==="application")||this._subtype.endsWith("+xml")}isHTML(){return this._subtype==="html"&&this._type==="text"}constructor(p){p=String(p);let f=n(p);if(f===null)throw Error(`Could not parse MIME type string "${p}"`);this._type=f.type,this._subtype=f.subtype,this._parameters=new r(f.parameters)}}}}),de=i0(le());function L(e,t="Assertion failed"){if(!e)throw Error(`Assertion Error: ${t}`)}function B1(e){throw Error(`Unexpected value: ${e}`)}var K={Uint8:1,Uint16:2,Uint32:4,BigUint64:8,Int8:1,Int16:2,Int32:4,BigInt64:8,Float32:4,Float64:8},M1=class{getOffset(){return this.offset}ensureBufferLength(e){let t=this.buffer.byteLength;if(!(this.offset+e<=t))throw Error("Reading out of bounds")}readUint8(){let e=K.Uint8;this.ensureBufferLength(e);let t=this.view.getUint8(this.offset);return this.offset+=e,t}readUint16(){let e=K.Uint16;this.ensureBufferLength(e);let t=this.view.getUint16(this.offset);return this.offset+=e,t}readUint32(){let e=K.Uint32;this.ensureBufferLength(e);let t=this.view.getUint32(this.offset);return this.offset+=e,t}readUint64(){let e=this.readBigUint64();return Number(e)}readBigUint64(){let e=K.BigUint64;this.ensureBufferLength(e);let t=this.view.getBigUint64(this.offset);return this.offset+=e,t}readInt8(){let e=K.Int8;this.ensureBufferLength(e);let t=this.view.getInt8(this.offset);return this.offset+=e,t}readInt16(){let e=K.Int16;this.ensureBufferLength(e);let t=this.view.getInt16(this.offset);return this.offset+=e,t}readInt32(){let e=K.Int32;this.ensureBufferLength(e);let t=this.view.getInt32(this.offset);return this.offset+=e,t}readInt64(){let e=this.readBigInt64();return Number(e)}readBigInt64(){let e=K.BigInt64;this.ensureBufferLength(e);let t=this.view.getBigInt64(this.offset);return this.offset+=e,t}readFloat32(){let e=K.Float32;this.ensureBufferLength(e);let t=this.view.getFloat32(this.offset);return this.offset+=e,t}readFloat64(){let e=K.Float64;this.ensureBufferLength(e);let t=this.view.getFloat64(this.offset);return this.offset+=e,t}readBuffer(e){let t=this.offset,r=t+e,n=this.buffer.slice(t,r);return this.offset=r,n}readString(){let e=this.readUint32(),t=this.readBuffer(e);return this.decoder.decode(t)}readJson(){let e=this.readString();return JSON.parse(e)}constructor(e){this.buffer=e,this.offset=0,this.view=new DataView(this.buffer),this.decoder=new TextDecoder}};function R1(e){return Number.isFinite(e)}function D1(e){return e===void 0}function T0(e){return e==null}var Ge=Symbol("Mixed");function me(){return typeof O>"u"?{}:b0||(b0=ge())}function ge(){var e,t,r;let n,s=O.location,i=(e=O==null?void 0:O.bootstrap)==null?void 0:e.services;if(i)return i;try{if(n=O.top.location.origin,i=(r=(t=O.top)==null?void 0:t.bootstrap)==null?void 0:r.services)return i}catch{}if(n&&n!==s.origin)throw Error(`Unexpectedly embedded by ${n} (expected ${s.origin})`);if(s.origin.endsWith("framer.com")||s.origin.endsWith("framer.dev"))throw Error("ServiceMap data was not provided in document");try{let h=new URLSearchParams(s.search).get("services")||new URLSearchParams(s.hash.substring(1)).get("services");h&&(i=JSON.parse(h))}catch{}if(i&&typeof i=="object"&&i.api)return i;throw Error("ServiceMap requested but not available")}function J1(e,...t){var r,n;if(e)return;let s=Error("Assertion Error"+(t.length>0?": "+t.join(" "):""));if(s.stack)try{let i=s.stack.split(`
`);(r=i[1])!=null&&r.includes("assert")?(i.splice(1,1),s.stack=i.join(`
`)):(n=i[0])!=null&&n.includes("assert")&&(i.splice(0,1),s.stack=i.join(`
`))}catch{}throw s}function ve({error:e,tags:t,extras:r,critical:n,caller:s}){J1(_0,"Set up an error callback with setErrorReporter, or configure Sentry with initializeEnvironment");let i=M0(e,s);return _0({error:i,tags:{...i.tags,...t},extras:{...i.extras,...r},critical:!!n}),i}function M0(e,t=M0){return e instanceof Error?e:new ye(e,t)}var ye=class extends Error{constructor(e,t){let r=e?JSON.stringify(e):"No error message provided";if(super(r),this.message=r,t&&Error.captureStackTrace)Error.captureStackTrace(this,t);else try{throw Error()}catch(n){this.stack=n.stack}}};function I1(e,t=0,r=new Set){var n,s;if(e===null)return e;if(typeof e=="function")return`[Function: ${(n=e.name)!=null?n:"unknown"}]`;if(typeof e!="object")return e;if(e instanceof Error)return`[${e.toString()}]`;if(r.has(e))return"[Circular]";if(t>2)return"...";r.add(e);try{if("toJSON"in e&&typeof e.toJSON=="function")return I1(e.toJSON(),t+1,r);if(Array.isArray(e))return e.map(i=>I1(i,t+1,r));{if(Object.getPrototypeOf(e)!==Object.prototype)return`[Object: ${"__class"in e&&e.__class||((s=e.constructor)==null?void 0:s.name)}]`;let i={};for(let[h,p]of Object.entries(e))i[h]=I1(p,t+1,r);return i}}catch(i){return`[Throws: ${i instanceof Error?i.message:i}]`}finally{r.delete(e)}}var we=["trace","debug","info","warn","error"],be=[":trace",":debug",":info",":warn",":error"];function N0(e,t){let r=[];for(let n of e.split(/[ ,]/)){let s=n.trim();if(s.length===0)continue;let i=1,h=!1;s.startsWith("-")&&(s=s.slice(1),i=3,h=!0);for(let a=0;a<=4;a++){let o=be[a];if(o&&s.endsWith(o)){i=a,h&&(i+=1),(s=s.slice(0,s.length-o.length)).length===0&&(s="*");break}}let p=RegExp("^"+s.replace(/\*/g,".*")+"$"),f=0;for(let a of t)a.id.match(p)&&(a.level=i,++f);f===0&&r.push(n)}return r}var X0=class{toMessage(){if(this.stringPrefix)return this.parts;let e=[new Date(this.time).toISOString().substr(-14,14),we[this.level]+": ["+this.logger.id+"]"],t=0;for(;t<this.parts.length;t++){let r=this.parts[t];if(typeof r=="string"){e.push(r);continue}break}return this.stringPrefix=e.join(" "),this.parts.splice(0,t,this.stringPrefix),this.parts}toString(){return this.toMessage().map(e=>{var t,r;let n=typeof e;if(n==="string")return e;if(n==="function")return`[Function: ${(t=e.name)!=null?t:"unknown"}]`;if(e instanceof Error)return(r=e.stack)!=null?r:e.toString();let s=JSON.stringify(I1(e));return s?.length>253?s.slice(0,250)+"...":s}).join(" ")}constructor(e,t,r){this.logger=e,this.level=t,this.parts=r,this.id=X0.nextId++,this.time=Date.now()}},X1=X0;X1.nextId=0;var a1="app:info",j0=typeof process<"u"&&!!process.kill,_e=j0&&!1;_e?a1="-:warn":j0&&(a1="");try{typeof O<"u"&&O.localStorage&&(a1=O.localStorage.logLevel||a1)}catch{}try{typeof process<"u"&&(a1=process.env.DEBUG||a1)}catch{}try{typeof O<"u"&&Object.assign(O,{setLogLevel:Se})}catch{}try{typeof O<"u"&&O.postMessage&&O.top===O&&O.addEventListener("message",e=>{if(!e.data||typeof e.data!="object")return;let{loggerId:t,level:r,parts:n,printed:s}=e.data;if(typeof t!="string"||!Array.isArray(n)||n.length<1||typeof r!="number")return;let i=o0(t);if(r<0||r>5)return;n[0]=n[0].replace("[","*[");let h=new X1(i,r,n);h.stringPrefix=n[0],s1.push(h),!s&&(i.level>r||console==null||console.log(...h.toMessage()))})}catch{}try{typeof O<"u"&&O.postMessage&&O.top!==O&&(O1=e=>{var t;try{let r=e.toMessage().map(p=>I1(p)),n=e.logger,s=e.level,i=n.level<=e.level,h={loggerId:n.id,level:s,parts:r,printed:i};(t=O.top)==null||t.postMessage(h,me().app)}catch{}})}catch{}var H1={},s1=[],W0=1e3;function h1(e,t,r){let n=new X1(e,t,r);for(s1.push(n),O1==null||O1(n);s1.length>W0;)s1.shift();return n}function Te(e){return typeof e=="number"&&(W0=e),s1}function o0(e){let t=H1[e];if(t)return t;let r=new ke(e);return H1[e]=r,N0(a1,[r]),O1?.(new X1(r,-1,[])),r}function Se(e,t=!0){try{typeof O<"u"&&O.localStorage&&(O.localStorage.logLevel=e)}catch{}let r=a1;a1=e;let n=Object.values(H1);for(let i of n)i.level=3;let s=N0(e,n);if(s.length>0&&console?.warn("Some log level specs matched no loggers:",s),t&&s1.length>0){for(let i of(console?.log("--- LOG REPLAY ---"),s1))i.logger.level>i.level||(i.level>=3?console?.warn(...i.toMessage()):console?.log(...i.toMessage()));console?.log("--- END OF LOG REPLAY ---")}return r}var ke=class{extend(e){let t=this.id+":"+e;return o0(t)}getBufferedMessages(){return s1.filter(e=>e.logger===this)}setLevel(e){let t=this.level;return this.level=e,t}isLoggingTraceMessages(){return this.level>=0}constructor(e,t){this.id=e,this.level=3,this.didLog={},this.trace=(...r)=>{if(this.level>0)return;let n=h1(this,0,r);console?.log(...n.toMessage())},this.debug=(...r)=>{let n=h1(this,1,r);this.level>1||console==null||console.log(...n.toMessage())},this.info=(...r)=>{let n=h1(this,2,r);this.level>2||console==null||console.info(...n.toMessage())},this.warn=(...r)=>{let n=h1(this,3,r);this.level>3||console==null||console.warn(...n.toMessage())},this.warnOncePerMinute=(r,...n)=>{let s=this.didLog[r];if(s&&s>Date.now())return;this.didLog[r]=Date.now()+6e4,n.unshift(r);let i=h1(this,3,n);this.level>3||console==null||console.warn(...i.toMessage())},this.error=(...r)=>{let n=h1(this,4,r);this.level>4||console==null||console.error(...n.toMessage())},this.errorOncePerMinute=(r,...n)=>{let s=this.didLog[r];if(s&&s>Date.now())return;this.didLog[r]=Date.now()+6e4,n.unshift(r);let i=h1(this,4,n);this.level>4||console==null||console.error(...i.toMessage())},this.reportError=(r,n,s,i)=>{let h=Te().slice(-100).map(f=>f.toString().slice(0,1e3)).join(`
`),p=ve({caller:this.reportError,error:r,tags:{...s,handler:"logger",where:this.id},extras:{...n,logs:h},critical:i??this.errorIsCritical});n?this.error(p,n):this.error(p)},this.reportErrorOncePerMinute=(r,n)=>{if(!Ie(r))return;let s=this.didLog[r.message];s&&s>Date.now()||(this.didLog[r.message]=Date.now()+6e4,this.reportError(r,n))},this.reportCriticalError=(r,n,s)=>this.reportError(r,n,s,!0),this.errorIsCritical=t??(e==="fatal"||e.endsWith(":fatal"))}};function Ie(e){return Object.prototype.hasOwnProperty.call(e,"message")}var e4=o0("task-queue"),t4=Symbol("missing"),x1=typeof O<"u"?O.location.hostname:void 0,P0=!!(x1&&["web.framerlocal.com","localhost","127.0.0.1","[::1]"].includes(x1)),b1=(()=>{if(!x1)return;if(P0)return{main:x1,previewLink:void 0};let e=x1.match(/^(([^.]+\.)?beta\.)?((?:development\.)?framer\.com)$/);if(e&&e[3])return{previewLink:e[2]&&e[0],main:e[3]}})(),r4={hosts:b1,isDevelopment:b1?.main==="development.framer.com",isProduction:b1?.main==="framer.com",isLocal:P0},xe="dependencies",Ue="config",A0=`${Ue}/${xe}`,n4=`${A0}/importMap.json`,i4=`${A0}/dependencies.json`,X=Uint8Array,V=Uint16Array,a0=Int32Array,j1=new X([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),W1=new X([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Q1=new X([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),R0=function(e,t){for(var r=new V(31),n=0;n<31;++n)r[n]=t+=1<<e[n-1];for(var s=new a0(r[30]),n=1;n<30;++n)for(var i=r[n];i<r[n+1];++i)s[i]=i-r[n]<<5|n;return{b:r,r:s}},D0=R0(j1,2),q0=D0.b,Y1=D0.r;q0[28]=258,Y1[258]=28;var F0=R0(W1,0),Oe=F0.b,S0=F0.r,G1=new V(32768);for(B=0;B<32768;++B)f1=(61680&(f1=(52428&(f1=(43690&B)>>1|(21845&B)<<1))>>2|(13107&f1)<<2))>>4|(3855&f1)<<4,G1[B]=((65280&f1)>>8|(255&f1)<<8)>>1;var r1=function(e,t,r){for(var n,s=e.length,i=0,h=new V(t);i<s;++i)e[i]&&++h[e[i]-1];var p=new V(t);for(i=1;i<t;++i)p[i]=p[i-1]+h[i-1]<<1;if(r){n=new V(1<<t);var f=15-t;for(i=0;i<s;++i)if(e[i])for(var a=i<<4|e[i],o=t-e[i],l=p[e[i]-1]++<<o,u=l|(1<<o)-1;l<=u;++l)n[G1[l]>>f]=a}else for(i=0,n=new V(s);i<s;++i)e[i]&&(n[i]=G1[p[e[i]-1]++]>>15-e[i]);return n},u1=new X(288);for(B=0;B<144;++B)u1[B]=8;for(B=144;B<256;++B)u1[B]=9;for(B=256;B<280;++B)u1[B]=7;for(B=280;B<288;++B)u1[B]=8;var L1=new X(32);for(B=0;B<32;++B)L1[B]=5;var Le=r1(u1,9,0),Be=r1(u1,9,1),Ee=r1(L1,5,0),Ce=r1(L1,5,1),q1=function(e){for(var t=e[0],r=1;r<e.length;++r)e[r]>t&&(t=e[r]);return t},Q=function(e,t,r){var n=t/8|0;return(e[n]|e[n+1]<<8)>>(7&t)&r},F1=function(e,t){var r=t/8|0;return(e[r]|e[r+1]<<8|e[r+2]<<16)>>(7&t)},s0=function(e){return(e+7)/8|0},V0=function(e,t,r){return(t==null||t<0)&&(t=0),(r==null||r>e.length)&&(r=e.length),new X(e.subarray(t,r))},Ke=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],o1=function(e,t,r){var n=Error(t||Ke[e]);if(n.code=e,Error.captureStackTrace&&Error.captureStackTrace(n,o1),!r)throw n;return n},Me=function(e,t,r,n){var s=e.length,i=n?n.length:0;if(!s||t.f&&!t.l)return r||new X(0);var h=!r,p=h||t.i!=2,f=t.i;h&&(r=new X(3*s));var a=function(y1){var w1=r.length;if(y1>w1){var m1=new X(Math.max(2*w1,y1));m1.set(r),r=m1}},o=t.f||0,l=t.p||0,u=t.b||0,c=t.l,y=t.d,d=t.m,g=t.n,b=8*s;do{if(!c){o=Q(e,l,1);var w=Q(e,l+1,3);if(l+=3,w)if(w==1)c=Be,y=Ce,d=9,g=5;else if(w==2){var T=Q(e,l,31)+257,k=Q(e,l+10,15)+4,_=T+Q(e,l+5,31)+1;l+=14;for(var v=new X(_),I=new X(19),x=0;x<k;++x)I[Q1[x]]=Q(e,l+3*x,7);l+=3*k;for(var S=q1(I),H=(1<<S)-1,P=r1(I,S,1),x=0;x<_;){var U=P[Q(e,l,H)];l+=15&U;var N=U>>4;if(N<16)v[x++]=N;else{var M=0,A=0;for(N==16?(A=3+Q(e,l,3),l+=2,M=v[x-1]):N==17?(A=3+Q(e,l,7),l+=3):N==18&&(A=11+Q(e,l,127),l+=7);A--;)v[x++]=M}}var j=v.subarray(0,T),E=v.subarray(T);d=q1(j),g=q1(E),c=r1(j,d,1),y=r1(E,g,1)}else o1(1);else{var N=s0(l)+4,W=e[N-4]|e[N-3]<<8,Z=N+W;if(Z>s){f&&o1(0);break}p&&a(u+W),r.set(e.subarray(N,Z),u),t.b=u+=W,t.p=l=8*Z,t.f=o;continue}if(l>b){f&&o1(0);break}}p&&a(u+131072);for(var v1=(1<<d)-1,J=(1<<g)-1,n1=l;;n1=l){var M=c[F1(e,l)&v1],q=M>>4;if((l+=15&M)>b){f&&o1(0);break}if(M||o1(2),q<256)r[u++]=q;else if(q==256){n1=l,c=null;break}else{var F=q-254;if(q>264){var x=q-257,C=j1[x];F=Q(e,l,(1<<C)-1)+q0[x],l+=C}var Y=y[F1(e,l)&J],p1=Y>>4;Y||o1(3),l+=15&Y;var E=Oe[p1];if(p1>3){var C=W1[p1];E+=F1(e,l)&(1<<C)-1,l+=C}if(l>b){f&&o1(0);break}p&&a(u+131072);var d1=u+F;if(u<E){var E1=i-E,C1=Math.min(E,d1);for(E1+u<0&&o1(3);u<C1;++u)r[u]=n[E1+u]}for(;u<d1;++u)r[u]=r[u-E]}}t.l=c,t.p=n1,t.b=u,t.f=o,c&&(o=1,t.m=d,t.d=y,t.n=g)}while(!o);return u!=r.length&&h?V0(r,0,u):r.subarray(0,u)},i1=function(e,t,r){r<<=7&t;var n=t/8|0;e[n]|=r,e[n+1]|=r>>8},_1=function(e,t,r){r<<=7&t;var n=t/8|0;e[n]|=r,e[n+1]|=r>>8,e[n+2]|=r>>16},V1=function(e,t){for(var r=[],n=0;n<e.length;++n)e[n]&&r.push({s:n,f:e[n]});var s=r.length,i=r.slice();if(!s)return{t:$0,l:0};if(s==1){var h=new X(r[0].s+1);return h[r[0].s]=1,{t:h,l:1}}r.sort(function(_,v){return _.f-v.f}),r.push({s:-1,f:25001});var p=r[0],f=r[1],a=0,o=1,l=2;for(r[0]={s:-1,f:p.f+f.f,l:p,r:f};o!=s-1;)p=r[r[a].f<r[l].f?a++:l++],f=r[a!=o&&r[a].f<r[l].f?a++:l++],r[o++]={s:-1,f:p.f+f.f,l:p,r:f};for(var u=i[0].s,n=1;n<s;++n)i[n].s>u&&(u=i[n].s);var c=new V(u+1),y=e0(r[o-1],c,0);if(y>t){var n=0,d=0,g=y-t,b=1<<g;for(i.sort(function(v,I){return c[I.s]-c[v.s]||v.f-I.f});n<s;++n){var w=i[n].s;if(c[w]>t)d+=b-(1<<y-c[w]),c[w]=t;else break}for(d>>=g;d>0;){var T=i[n].s;c[T]<t?d-=1<<t-c[T]++-1:++n}for(;n>=0&&d;--n){var k=i[n].s;c[k]==t&&(--c[k],++d)}y=t}return{t:new X(c),l:y}},e0=function(e,t,r){return e.s==-1?Math.max(e0(e.l,t,r+1),e0(e.r,t,r+1)):t[e.s]=r},k0=function(e){for(var t=e.length;t&&!e[--t];);for(var r=new V(++t),n=0,s=e[0],i=1,h=function(f){r[n++]=f},p=1;p<=t;++p)if(e[p]==s&&p!=t)++i;else{if(!s&&i>2){for(;i>138;i-=138)h(32754);i>2&&(h(i>10?i-11<<5|28690:i-3<<5|12305),i=0)}else if(i>3){for(h(s),--i;i>6;i-=6)h(8304);i>2&&(h(i-3<<5|8208),i=0)}for(;i--;)h(s);i=1,s=e[p]}return{c:r.subarray(0,n),n:t}},T1=function(e,t){for(var r=0,n=0;n<t.length;++n)r+=e[n]*t[n];return r},z0=function(e,t,r){var n=r.length,s=s0(t+2);e[s]=255&n,e[s+1]=n>>8,e[s+2]=255^e[s],e[s+3]=255^e[s+1];for(var i=0;i<n;++i)e[s+i+4]=r[i];return(s+4+n)*8},I0=function(e,t,r,n,s,i,h,p,f,a,o){i1(t,o++,r),++s[256];for(var l,u,c,y,d=V1(s,15),g=d.t,b=d.l,w=V1(i,15),T=w.t,k=w.l,_=k0(g),v=_.c,I=_.n,x=k0(T),S=x.c,H=x.n,P=new V(19),U=0;U<v.length;++U)++P[31&v[U]];for(var U=0;U<S.length;++U)++P[31&S[U]];for(var N=V1(P,7),M=N.t,A=N.l,j=19;j>4&&!M[Q1[j-1]];--j);var E=a+5<<3,W=T1(s,u1)+T1(i,L1)+h,Z=T1(s,g)+T1(i,T)+h+14+3*j+T1(P,M)+2*P[16]+3*P[17]+7*P[18];if(f>=0&&E<=W&&E<=Z)return z0(t,o,e.subarray(f,f+a));if(i1(t,o,1+(Z<W)),o+=2,Z<W){l=r1(g,b,0),u=g,c=r1(T,k,0),y=T;var v1=r1(M,A,0);i1(t,o,I-257),i1(t,o+5,H-1),i1(t,o+10,j-4),o+=14;for(var U=0;U<j;++U)i1(t,o+3*U,M[Q1[U]]);o+=3*j;for(var J=[v,S],n1=0;n1<2;++n1)for(var q=J[n1],U=0;U<q.length;++U){var F=31&q[U];i1(t,o,v1[F]),o+=M[F],F>15&&(i1(t,o,q[U]>>5&127),o+=q[U]>>12)}}else l=Le,u=u1,c=Ee,y=L1;for(var U=0;U<p;++U){var C=n[U];if(C>255){var F=C>>18&31;_1(t,o,l[F+257]),o+=u[F+257],F>7&&(i1(t,o,C>>23&31),o+=j1[F]);var Y=31&C;_1(t,o,c[Y]),o+=y[Y],Y>3&&(_1(t,o,C>>5&8191),o+=W1[Y])}else _1(t,o,l[C]),o+=u[C]}return _1(t,o,l[256]),o+u[256]},Ne=new a0([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),$0=new X(0),Xe=function(e,t,r,n,s,i){var h=i.z||e.length,p=new X(n+h+5*(1+Math.ceil(h/7e3))+s),f=p.subarray(n,p.length-s),a=i.l,o=7&(i.r||0);if(t){o&&(f[0]=i.r>>3);for(var l=Ne[t-1],u=l>>13,c=8191&l,y=(1<<r)-1,d=i.p||new V(32768),g=i.h||new V(y+1),b=Math.ceil(r/3),w=2*b,T=function(A1){return(e[A1]^e[A1+1]<<b^e[A1+2]<<w)&y},k=new a0(25e3),_=new V(288),v=new V(32),I=0,x=0,S=i.i||0,H=0,P=i.w||0,U=0;S+2<h;++S){var N=T(S),M=32767&S,A=g[N];if(d[M]=A,g[N]=M,P<=S){var j=h-S;if((I>7e3||H>24576)&&(j>423||!a)){o=I0(e,f,0,k,_,v,x,H,U,S-U,o),H=I=x=0,U=S;for(var E=0;E<286;++E)_[E]=0;for(var E=0;E<30;++E)v[E]=0}var W=2,Z=0,v1=c,J=M-A&32767;if(j>2&&N==T(S-J))for(var n1=Math.min(u,j)-1,q=Math.min(32767,S),F=Math.min(258,j);J<=q&&--v1&&M!=A;){if(e[S+W]==e[S+W-J]){for(var C=0;C<F&&e[S+C]==e[S+C-J];++C);if(C>W){if(W=C,Z=J,C>n1)break;for(var Y=Math.min(J,C-2),p1=0,E=0;E<Y;++E){var d1=S-J+E&32767,E1=d[d1],C1=d1-E1&32767;C1>p1&&(p1=C1,A=d1)}}}A=d[M=A],J+=M-A&32767}if(Z){k[H++]=268435456|Y1[W]<<18|S0[Z];var y1=31&Y1[W],w1=31&S0[Z];x+=j1[y1]+W1[w1],++_[257+y1],++v[w1],P=S+W,++I}else k[H++]=e[S],++_[e[S]]}}for(S=Math.max(S,P);S<h;++S)k[H++]=e[S],++_[e[S]];o=I0(e,f,a,k,_,v,x,H,U,S-U,o),a||(i.r=7&o|f[o/8|0]<<3,o-=7,i.h=g,i.p=d,i.i=S,i.w=P)}else{for(var S=i.w||0;S<h+a;S+=65535){var m1=S+65535;m1>=h&&(f[o/8|0]=a,m1=h),o=z0(f,o+1,e.subarray(S,m1))}i.i=h}return V0(p,0,n+s0(o)+s)},je=function(e,t,r,n,s){if(!s&&(s={l:1},t.dictionary)){var i=t.dictionary.subarray(-32768),h=new X(i.length+e.length);h.set(i),h.set(e,i.length),e=h,s.w=i.length}return Xe(e,t.level==null?6:t.level,t.mem==null?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(e.length)))):12+t.mem,r,n,s)};function Z0(e,t){return je(e,t||{},0,0)}function J0(e,t){return Me(e,{i:2},t&&t.out,t&&t.dictionary)}var We=typeof TextDecoder<"u"&&new TextDecoder,Pe=0;try{We.decode($0,{stream:!0}),Pe=1}catch{}var Ae=i0(ue()),Re=1024,De=1.5,z1=e=>2**e-1,$1=e=>-(2**(e-1)),Z1=e=>2**(e-1)-1,G={Uint8:0,Uint16:0,Uint32:0,Uint64:0,BigUint64:0,Int8:$1(8),Int16:$1(16),Int32:$1(32),Int64:Number.MIN_SAFE_INTEGER,BigInt64:-(BigInt(2)**BigInt(63))},e1={Uint8:z1(8),Uint16:z1(16),Uint32:z1(32),Uint64:Number.MAX_SAFE_INTEGER,BigUint64:BigInt(2)**BigInt(64)-BigInt(1),Int8:Z1(8),Int16:Z1(16),Int32:Z1(32),Int64:Number.MAX_SAFE_INTEGER,BigInt64:BigInt(2)**BigInt(63)-BigInt(1)};function t1(e,t,r,n){L(e>=t,`${e} outside lower bound for ${n}`),L(e<=r,`${e} outside upper bound for ${n}`)}var H0=class{getOffset(){return this.offset}slice(e=0,t=this.offset){return this.buffer.slice(e,t)}subarray(e=0,t=this.offset){return new Uint8Array(this.buffer,e,t)}ensureBufferLength(e){let t=this.buffer.byteLength;if(this.offset+e<=t)return;let r=new ArrayBuffer(Math.ceil(t*De)+e);x0(this.buffer,r,0),this.buffer=r,this.view=new DataView(r)}writeUint8(e){t1(e,G.Uint8,e1.Uint8,"Uint8");let t=K.Uint8;this.ensureBufferLength(t),this.view.setUint8(this.offset,e),this.offset+=t}writeUint16(e){t1(e,G.Uint16,e1.Uint16,"Uint16");let t=K.Uint16;this.ensureBufferLength(t),this.view.setUint16(this.offset,e),this.offset+=t}writeUint32(e){t1(e,G.Uint32,e1.Uint32,"Uint32");let t=K.Uint32;this.ensureBufferLength(t),this.view.setUint32(this.offset,e),this.offset+=t}writeUint64(e){t1(e,G.Uint64,e1.Uint64,"Uint64");let t=BigInt(e);this.writeBigUint64(t)}writeBigUint64(e){t1(e,G.BigUint64,e1.BigUint64,"BigUint64");let t=K.BigUint64;this.ensureBufferLength(t),this.view.setBigUint64(this.offset,e),this.offset+=t}writeInt8(e){t1(e,G.Int8,e1.Int8,"Int8");let t=K.Int8;this.ensureBufferLength(t),this.view.setInt8(this.offset,e),this.offset+=t}writeInt16(e){t1(e,G.Int16,e1.Int16,"Int16");let t=K.Int16;this.ensureBufferLength(t),this.view.setInt16(this.offset,e),this.offset+=t}writeInt32(e){t1(e,G.Int32,e1.Int32,"Int32");let t=K.Int32;this.ensureBufferLength(t),this.view.setInt32(this.offset,e),this.offset+=t}writeInt64(e){t1(e,G.Int64,e1.Int64,"Int64");let t=BigInt(e);this.writeBigInt64(t)}writeBigInt64(e){t1(e,G.BigInt64,e1.BigInt64,"BigInt64");let t=K.BigInt64;this.ensureBufferLength(t),this.view.setBigInt64(this.offset,e),this.offset+=t}writeFloat32(e){let t=K.Float32;this.ensureBufferLength(t),this.view.setFloat32(this.offset,e),this.offset+=t}writeFloat64(e){let t=K.Float64;this.ensureBufferLength(t),this.view.setFloat64(this.offset,e),this.offset+=t}writeBuffer(e){let t=e.byteLength;this.ensureBufferLength(t),x0(e,this.buffer,this.offset),this.offset+=t}encodeString(e){let t=this.encodedStrings.get(e);if(t)return t;let r=this.encoder.encode(e);return this.encodedStrings.set(e,r),r}writeString(e){let t=this.encodeString(e),r=t.byteLength;this.writeUint32(r),this.writeBuffer(t)}writeJson(e){let t=JSON.stringify(e);this.writeString(t)}constructor(){this.offset=0,this.buffer=new ArrayBuffer(Re),this.view=new DataView(this.buffer),this.encoder=new TextEncoder,this.encodedStrings=new Map}};function x0(e,t,r){let n=new Uint8Array(e);new Uint8Array(t).set(n,r)}var l1=class{static fromString(e){let[t,r,n]=e.split("/").map(Number);return L(R1(t),"Invalid chunkId"),L(R1(r),"Invalid offset"),L(R1(n),"Invalid length"),new l1(t,r,n)}toString(){return`${this.chunkId}/${this.offset}/${this.length}`}static read(e){let t=e.readUint16(),r=e.readUint32(),n=e.readUint32();return new l1(t,r,n)}write(e){e.writeUint16(this.chunkId),e.writeUint32(this.offset),e.writeUint32(this.length)}compare(e){return this.chunkId<e.chunkId?-1:this.chunkId>e.chunkId?1:this.offset<e.offset?-1:this.offset>e.offset?1:(L(this.length===e.length),0)}constructor(e,t,r){this.chunkId=e,this.offset=t,this.length=r}};function t0(e){if(e===null)return 0;switch(e.type){case m.Boolean:return 1;case m.Color:return 2;case m.Date:return 3;case m.Enum:return 4;case m.File:return 5;case m.ResponsiveImage:return 6;case m.Link:return 7;case m.Number:return 8;case m.RichText:return 9;case m.String:return 10;default:B1(e)}}var U1=class{static read(e){let t=e.readUint8(),r=qe(t,e);return new U1(r)}write(e){let t=t0(this.value);if(e.writeUint8(t),this.value!==null)switch(this.value.type){case m.Boolean:return l0.write(e,this.value);case m.Color:return u0.write(e,this.value);case m.Date:return f0.write(e,this.value);case m.Enum:return h0.write(e,this.value);case m.File:return c0.write(e,this.value);case m.ResponsiveImage:return p0.write(e,this.value);case m.Link:return d0.write(e,this.value);case m.Number:return m0.write(e,this.value);case m.RichText:return g0.write(e,this.value);case m.String:return v0.write(e,this.value);default:B1(this.value)}}static compare(e,t,r){return g1(e.value,t.value,r)}constructor(e){this.value=e}};function qe(e,t){switch(e){case 0:return null;case 1:return l0.read(t);case 2:return u0.read(t);case 3:return f0.read(t);case 4:return h0.read(t);case 5:return c0.read(t);case 6:return p0.read(t);case 7:return d0.read(t);case 8:return m0.read(t);case 9:return g0.read(t);case 10:return v0.read(t);default:B1(e)}}var l0={read:e=>({type:m.Boolean,value:e.readUint8()!==0}),write(e,t){e.writeUint8(t.value?1:0)},compare:(e,t)=>e.value<t.value?-1:e.value>t.value?1:0},u0={read:e=>({type:m.Color,value:e.readString()}),write(e,t){e.writeString(t.value)},compare:(e,t)=>e.value<t.value?-1:e.value>t.value?1:0},f0={read(e){let t=e.readInt64(),r=new Date(t);return{type:m.Date,value:r.toISOString()}},write(e,t){let r=new Date(t.value),n=r.getTime();e.writeInt64(n)},compare(e,t){let r=new Date(e.value),n=new Date(t.value);return r<n?-1:r>n?1:0}},h0={read:e=>({type:m.Enum,value:e.readString()}),write(e,t){e.writeString(t.value)},compare:(e,t)=>e.value<t.value?-1:e.value>t.value?1:0},c0={read:e=>({type:m.File,value:e.readString()}),write(e,t){e.writeString(t.value)},compare:(e,t)=>e.value<t.value?-1:e.value>t.value?1:0},p0={read:e=>({type:m.ResponsiveImage,value:e.readJson()}),write(e,t){e.writeJson(t.value)},compare(e,t){let r=JSON.stringify(e.value),n=JSON.stringify(t.value);return r<n?-1:r>n?1:0}},d0={read:e=>({type:m.Link,value:e.readJson()}),write(e,t){e.writeJson(t.value)},compare(e,t){let r=JSON.stringify(e.value),n=JSON.stringify(t.value);return r<n?-1:r>n?1:0}},m0={read:e=>({type:m.Number,value:e.readFloat64()}),write(e,t){e.writeFloat64(t.value)},compare:(e,t)=>e.value<t.value?-1:e.value>t.value?1:0},g0={read:e=>({type:m.RichText,value:e.readUint32()}),write(e,t){e.writeUint32(t.value)},compare(e,t){let r=e.value,n=t.value;return r<n?-1:r>n?1:0}},v0={read:e=>({type:m.String,value:e.readString()}),write(e,t){e.writeString(t.value)},compare(e,t,r){let n=e.value,s=t.value;return r.type===0&&(n=e.value.toLowerCase(),s=t.value.toLowerCase()),n<s?-1:n>s?1:0}};function g1(e,t,r){let n=t0(e),s=t0(t);if(n<s)return-1;if(n>s)return 1;if(e===null||t===null)return 0;switch(e.type){case m.Boolean:return L(t.type===m.Boolean),l0.compare(e,t,r);case m.Color:return L(t.type===m.Color),u0.compare(e,t,r);case m.Date:return L(t.type===m.Date),f0.compare(e,t,r);case m.Enum:return L(t.type===m.Enum),h0.compare(e,t,r);case m.File:return L(t.type===m.File),c0.compare(e,t,r);case m.ResponsiveImage:return L(t.type===m.ResponsiveImage),p0.compare(e,t,r);case m.Link:return L(t.type===m.Link),d0.compare(e,t,r);case m.Number:return L(t.type===m.Number),m0.compare(e,t,r);case m.RichText:return L(t.type===m.RichText),g0.compare(e,t,r);case m.String:return L(t.type===m.String),v0.compare(e,t,r);default:B1(e)}}var Q0=class{static deserialize(e){let t=J0(e),r=new M1(t.buffer),n=r.readJson(),s=r.readUint8(),i=[];for(let f=0;f<s;f++){let a=r.readString();i.push(a)}let h=new Q0(i,{collation:n}),p=r.readUint32();for(let f=0;f<p;f++){let a=[];for(let l=0;l<s;l++){let u=U1.read(r);a.push(u)}let o=l1.read(r);h.entries.insert({values:a,pointer:o})}return h}serialize(){let e=new H0;for(let r of(e.writeJson(this.options.collation),e.writeUint8(this.fieldNames.length),this.fieldNames))e.writeString(r);for(let r of(e.writeUint32(this.entries.size),this.entries)){let{values:n,pointer:s}=r.key;for(let i of n)i.write(e);s.write(e)}let t=e.subarray();return Z0(t)}addItem(e,t){let r=this.fieldNames.map(n=>{var s;return(s=e.getField(n))!=null?s:new U1(null)});this.entries.insert({values:r,pointer:t})}constructor(e,t){this.fieldNames=e,this.options=t,this.entries=new Ae.default((r,n)=>{let s=r.values,i=n.values;for(let h=0;h<this.fieldNames.length;h++){let p=s[h],f=i[h];J1(p,"Left has incorrect number of field values"),J1(f,"Right has incorrect number of field values");let a=U1.compare(p,f,this.options.collation);if(a!==0)return a}return r.pointer.compare(n.pointer)})}},Fe=i0(pe()),S1=`\r
`,K1="--";async function Y0(e,t){let r=await fetch(e,{headers:{Range:Je(t)}});if(!r.ok)throw Error(`Request failed: ${r.status} ${r.statusText}`);let n=await r.arrayBuffer(),s=new Uint8Array(n);if(r.status===200)return t.map(i=>{if(i.to>s.length)throw Error("Missing data");return s.slice(i.from,i.to)});if(r.status===206){let i=r.headers.get("Content-Type");if(!i)throw Error("Missing Content-Type header");let h=new $e,p=new Fe.default(i);if(p.type==="multipart"&&p.subtype==="byteranges"){let f=p.parameters.get("boundary");if(!f)throw Error("Missing boundary parameter");let a=ze(s,f);for(let{headers:o,body:l}of a){let u=o.get("Content-Range");if(!u)throw Error("Missing Content-Range header");let c=U0(u);if(c.unit!=="bytes")throw Error("Unsupported unit");h.write(c.start,l)}}else{let f=r.headers.get("Content-Range");if(!f)throw Error("Missing Content-Range header");let a=U0(f);if(a.unit!=="bytes")throw Error("Unsupported unit");h.write(a.start,s)}return t.map(f=>h.read(f.from,f.to-f.from))}throw Error(`Unsupported response: ${r.status} ${r.statusText}`)}var k1=new TextEncoder,Ve=new TextDecoder;function ze(e,t){let r=k1.encode(K1+t),n=r0(e,r);if(D1(n))throw Error("Missing parts start");let s=n+r.length,i=k1.encode(S1+K1+t+K1),h=Ze(e,i);if(D1(h))throw Error("Missing parts end");let p=k1.encode(S1+K1+t),f=e.subarray(s,h);return O0(f,p).map(o=>{let l=k1.encode(S1+S1),u=r0(o,l);if(D1(u))throw Error("Missing headers end");let c=k1.encode(S1),y=o.subarray(0,u),d=O0(y,c),g=new Headers;for(let T of d){let k=Ve.decode(T),[_,v]=k.split(": ",2);_&&v&&g.append(_,v)}let b=u+l.length,w=o.slice(b);return{headers:g,body:w}})}function U0(e){let t=RegExp("^(?<unit>\\w+) (?<start>\\d+)-(?<end>\\d+)\\/(?<size>\\d+|\\*)$","u").exec(e);if(!t||!t.groups)throw Error("Invalid Content-Range header");let{unit:r,start:n,end:s,size:i}=t.groups;return{unit:r,start:Number(n),end:Number(s),size:i!=="*"?Number(i):null}}var $e=class{read(e,t){for(let r of this.chunks){if(e<r.start)break;if(e>r.end)continue;if(e+t>r.end)break;let n=e-r.start,s=n+t;return r.data.slice(n,s)}throw Error("Missing data")}write(e,t){let r=e,n=r+t.length,s=0,i=this.chunks.length;for(;s<i;s++){let f=this.chunks[s];if(L(f,"Missing chunk"),!(r>f.end)){if(r>f.start){let a=r-f.start,o=f.data.subarray(0,a);t=L0(o,t),r=f.start}break}}for(;i>s;i--){let f=this.chunks[i-1];if(L(f,"Missing chunk"),!(n<f.start)){if(n<f.end){let a=n-f.start,o=f.data.subarray(a);t=L0(t,o),n=f.end}break}}let h={start:r,end:n,data:t},p=i-s;this.chunks.splice(s,p,h)}constructor(){this.chunks=[]}};function O0(e,t){var r;let n=[];for(;e.length>0;){let s=(r=r0(e,t))!=null?r:e.length,i=e.subarray(0,s);n.push(i),e=e.subarray(s+t.length)}return n}function r0(e,t){for(let r=0;r<e.length-t.length;r++){let n=e.subarray(r);if(G0(n,t))return r}}function Ze(e,t){for(let r=e.length-t.length;r>=0;r--){let n=e.subarray(r);if(G0(n,t))return r}}function G0(e,t){for(let r=0;r<t.length;r++)if(e[r]!==t[r])return!1;return!0}function L0(e,t){let r=e.length+t.length,n=new Uint8Array(r);return n.set(e,0),n.set(t,e.length),n}function Je(e){L(e.length>0,"Must have at least one range");let t=[...e].sort((s,i)=>s.from-i.from),r=[];for(let s of t){let i=r.length-1,h=r[i];h&&s.from<=h.to?r[i]={from:h.from,to:Math.max(h.to,s.to)}:r.push(s)}return`bytes=${r.map(s=>`${s.from}-${s.to-1}`).join(",")}`}var R=class{async loadModel(){let[e]=await Y0(this.options.url,[this.options.range]);return L(e,"Failed to load model"),Q0.deserialize(e)}async getModel(){return this.modelPromise!=null||(this.modelPromise=this.loadModel()),this.model!=null||(this.model=await this.modelPromise),this.model}async lookupItems(e){var t;L(e.length===this.fields.length,"Invalid query length");let r=e[0];L(r,"Invalid query length");for(let s=1;s<e.length;s++)L(((t=e[s])==null?void 0:t.type)==="All","Unsupported query");let n=await this.getModel();switch(r.type){case"All":return this.queryAll(n);case"Equals":return this.queryEquals(n,r);case"NotEquals":return this.queryNotEquals(n,r);case"LessThan":return this.queryLessThan(n,r);case"GreaterThan":return this.queryGreaterThan(n,r);case"Contains":return this.queryContains(n,r);case"StartsWith":return this.queryStartsWith(n,r);case"EndsWith":return this.queryEndsWith(n,r);default:B1(r)}}findItems(e,t){let r=[];for(let n of e.entries){let s=n.key.values[0];if(L(s,"Value must exist"),!t(s.value))continue;let i={};for(let h=0;h<this.options.fieldNames.length;h++){let p=n.key.values[h],f=this.options.fieldNames[h];L(p,"Value must exist"),L(f,"Field name must exist"),i[f]=p.value}r.push({pointer:n.key.pointer.toString(),data:i})}return r}queryAll(e){return this.findItems(e,()=>!0)}queryEquals(e,t){return this.findItems(e,r=>g1(r,t.value,this.collation)===0)}queryNotEquals(e,t){return this.findItems(e,r=>g1(r,t.value,this.collation)!==0)}queryLessThan(e,t){return this.findItems(e,r=>{let n=g1(r,t.value,this.collation);return!T0(r)&&(!!t.inclusive&&n===0||n<0)})}queryGreaterThan(e,t){return this.findItems(e,r=>{let n=g1(r,t.value,this.collation);return!T0(r)&&(!!t.inclusive&&n===0||n>0)})}queryContains(e,t){return this.findItems(e,r=>{var n;if(r?.type!==m.String||((n=t.value)==null?void 0:n.type)!==m.String)return!1;let s=r.value,i=t.value.value;return this.collation.type===0&&(s=s.toLowerCase(),i=i.toLowerCase()),s.includes(i)})}queryStartsWith(e,t){return this.findItems(e,r=>{var n;if(r?.type!==m.String||((n=t.value)==null?void 0:n.type)!==m.String)return!1;let s=r.value,i=t.value.value;return this.collation.type===0&&(s=s.toLowerCase(),i=i.toLowerCase()),s.startsWith(i)})}queryEndsWith(e,t){return this.findItems(e,r=>{var n;if(r?.type!==m.String||((n=t.value)==null?void 0:n.type)!==m.String)return!1;let s=r.value,i=t.value.value;return this.collation.type===0&&(s=s.toLowerCase(),i=i.toLowerCase()),s.endsWith(i)})}constructor(e){this.options=e,this.supportedLookupTypes=["All","Equals","NotEquals","LessThan","GreaterThan","Contains","StartsWith","EndsWith"],this.collation=this.options.collation;let t={},r=[];for(let n of this.options.fieldNames){let s=this.options.collectionSchema[n];L(s,`Missing definition for field ${n}`),t[n]=s,r.push({type:"Identifier",name:n})}this.schema=t,this.fields=r}},n0=class{static read(e,t){let r=new n0,n=e.readUint32(),s=e.readBuffer(n),i=J0(new Uint8Array(s),{dictionary:t}),h=new M1(i.buffer),p=h.readUint16();for(let f=0;f<p;f++){let a=h.readString(),o=U1.read(h);r.setField(a,o)}return r}writeUncompressed(e){for(let[t,r]of(e.writeUint16(this.fields.size),this.fields))e.writeString(t),r.write(e)}write(e,t){let r=new H0;this.writeUncompressed(r);let n=Z0(r.subarray(),{dictionary:t});e.writeUint32(n.byteLength),e.writeBuffer(n)}getData(){let e={};for(let[t,r]of this.fields)e[t]=r.value;return e}setField(e,t){this.fields.set(e,t)}getField(e){return this.fields.get(e)}constructor(){this.fields=new Map}},He=class{scanItems(){return this.itemsPromise!=null||(this.itemsPromise=fetch(this.url).then(async e=>{if(!e.ok)throw Error(`Request failed: ${e.status} ${e.statusText}`);let t=await e.arrayBuffer(),r=new M1(t),n=[],s=r.readUint32();for(let i=0;i<s;i++){let h=r.getOffset(),p=n0.read(r,this.compressionDictionary),f=r.getOffset()-h,a=new l1(this.id,h,f),o=a.toString(),l={pointer:o,data:p.getData()};this.itemLoader.prime(o,l),n.push(l)}return n})),this.itemsPromise}resolveItem(e){return this.itemLoader.load(e)}constructor(e,t,r){this.id=e,this.url=t,this.compressionDictionary=r,this.itemLoader=new de.default(async n=>{let s=n.map(h=>{let p=l1.fromString(h);return{from:p.offset,to:p.offset+p.length}});return(await Y0(this.url,s)).map((h,p)=>{let f=new M1(h.buffer),a=n0.read(f,this.compressionDictionary),o=n[p];return L(o,"Missing pointer"),{pointer:o,data:a.getData()}})})}},ee=class{async scanItems(){return(await Promise.all(this.chunks.map(async t=>t.scanItems()))).flat()}async resolveItems(e){return Promise.all(e.map(t=>{let r=l1.fromString(t),n=this.chunks[r.chunkId];return L(n,"Missing chunk"),n.resolveItem(t)}))}compareItems(e,t){let r=l1.fromString(e.pointer),n=l1.fromString(t.pointer);return r.compare(n)}compareValues(e,t,r){return g1(e,t,r)}constructor(e){this.options=e,this.schema=this.options.schema,this.indexes=this.options.indexes,this.resolveRichText=this.options.resolveRichText;let t=new Uint8Array(this.options.compressionDictionary);this.chunks=this.options.chunks.map((r,n)=>new He(n,r,t))}};/*! Bundled license information:

splaytree/dist/splay.js:
  (**
   * splaytree v3.1.2
   * Fast Splay tree for Node and browser
   *
   * @author Alexander Milevski <info@w8r.name>
   * @license MIT
   * @preserve
   *)
  (*! *****************************************************************************
      Copyright (c) Microsoft Corporation. All rights reserved.
      Licensed under the Apache License, Version 2.0 (the "License"); you may not use
      this file except in compliance with the License. You may obtain a copy of the
      License at http://www.apache.org/licenses/LICENSE-2.0
  
      THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
      KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
      WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
      MERCHANTABLITY OR NON-INFRINGEMENT.
  
      See the Apache Version 2.0 License for specific language governing permissions
      and limitations under the License.
      ***************************************************************************** *)
*/var z=(e,t)=>async()=>(await e())[t],$=()=>import("./wKWOsKTWX-2-JHCEFKFJ.mjs"),Qe=[z($,"richText"),z($,"richText1"),z($,"richText2"),z($,"richText3"),z($,"richText4"),z($,"richText5"),z($,"richText6"),z($,"richText7"),z($,"richText8"),z($,"richText9"),z($,"richText10"),z($,"richText11"),z($,"richText12")];async function te(e){let t=Qe[e];if(t)return await t()}var D={C988mKTqn:{isNullable:!0,type:m.String},etXqX0KC_:{isNullable:!0,type:m.RichText},h1AVIwX_8:{isNullable:!0,type:m.Link},id:{isNullable:!1,type:m.String},jRVQbYQzz:{isNullable:!0,type:m.String},LBINpbl5a:{isNullable:!0,type:m.ResponsiveImage},MUDnjxdZn:{isNullable:!0,type:m.String},OQtdBbuAO:{isNullable:!0,type:m.Link},qJKyHt_fs:{isNullable:!0,type:m.String},QLAYT3VgS:{isNullable:!0,type:m.String},THSsQmBZV:{isNullable:!0,type:m.String},uSZ0AjDBA:{isNullable:!0,type:m.Date},VhyYFPTSv:{isNullable:!0,type:m.ResponsiveImage}},re=new w0,P1={collectionByLocaleId:{default:new ee({chunks:[new URL("./wKWOsKTWX-chunk-default-0.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href],compressionDictionary:[0,13,0,0,0,2,105,100,10,0,0,0,9,121,108,76,79,83,106,120,86,79,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,56,66,101,32,77,111,114,101,32,89,111,117,114,115,101,108,102,58,32,54,32,83,105,103,110,115,32,89,111,117,32,78,101,101,100,32,97,32,66,111,111,115,116,32,111,102,32,86,105,116,97,109,105,110,32,66,54,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,55,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,75,149,144,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,114,109,101,65,78,86,88,69,116,113,50,118,56,108,103,104,109,121,79,77,85,100,74,69,89,52,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,122,83,116,97,114,116,32,119,105,116,104,32,97,32,98,114,105,101,102,32,105,110,116,114,111,100,117,99,116,105,111,110,32,101,120,112,108,97,105,110,105,110,103,32,116,104,101,32,105,109,112,111,114,116,97,110,99,101,32,111,102,32,118,105,116,97,109,105,110,32,66,54,32,102,111,114,32,111,118,101,114,97,108,108,32,104,101,97,108,116,104,32,97,110,100,32,119,101,108,108,45,98,101,105,110,103,44,32,109,101,110,116,105,111,110,46,46,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,220,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,104,97,114,109,111,110,105,122,101,45,121,111,117,114,45,104,97,98,105,116,115,45,117,110,108,101,97,115,104,45,121,111,117,114,45,116,114,117,101,45,115,101,108,102,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,84,110,83,111,111,119,108,78,83,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,213,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,101,120,112,101,114,116,108,121,45,115,121,110,99,101,100,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,121,111,117,45,114,101,108,121,45,111,110,45,114,101,115,117,108,116,115,45,121,111,117,45,115,101,101,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,76,87,122,87,99,66,90,70,57,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,0,0,13,0,0,0,2,105,100,10,0,0,0,9,76,87,122,87,99,66,90,70,57,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,61,69,120,112,101,114,116,108,121,32,115,121,110,99,101,100,32,119,105,116,104,32,116,104,101,32,116,111,111,108,115,32,121,111,117,32,114,101,108,121,32,111,110,44,32,114,101,115,117,108,116,115,32,121,111,117,32,115,101,101,107,46,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,59,101,120,112,101,114,116,108,121,45,115,121,110,99,101,100,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,121,111,117,45,114,101,108,121,45,111,110,45,114,101,115,117,108,116,115,45,121,111,117,45,115,101,101,107,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,128,6,120,120,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,103,51,108,76,117,115,56,56,118,99,106,105,54,112,107,73,119,98,81,102,116,57,99,72,116,56,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,105,34,73,110,32,116,111,100,97,121,39,115,32,105,110,116,101,114,99,111,110,110,101,99,116,101,100,32,100,105,103,105,116,97,108,32,108,97,110,100,115,99,97,112,101,44,32,115,117,99,99,101,115,115,32,111,102,116,101,110,32,104,105,110,103,101,115,32,111,110,32,116,104,101,32,97,98,105,108,105,116,121,32,116,111,32,104,97,114,109,111,110,105,111,117,115,108,121,46,46,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,121,108,76,79,83,106,120,86,79,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,211,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,104,97,114,109,111,110,105,111,117,115,108,121,45,99,111,110,110,101,99,116,101,100,45,116,111,45,116,104,101,45,116,111,111,108,115,45,101,110,115,117,114,105,110,103,45,116,104,101,45,111,117,116,99,111,109,101,115,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,119,100,74,85,89,113,71,51,68,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,1,0,13,0,0,0,2,105,100,10,0,0,0,9,119,100,74,85,89,113,71,51,68,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,57,72,97,114,109,111,110,105,111,117,115,108,121,32,99,111,110,110,101,99,116,101,100,32,116,111,32,116,104,101,32,116,111,111,108,115,32,101,110,115,117,114,105,110,103,32,116,104,101,32,111,117,116,99,111,109,101,115,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,57,104,97,114,109,111,110,105,111,117,115,108,121,45,99,111,110,110,101,99,116,101,100,45,116,111,45,116,104,101,45,116,111,111,108,115,45,101,110,115,117,114,105,110,103,45,116,104,101,45,111,117,116,99,111,109,101,115,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,127,138,223,216,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,83,85,56,69,79,86,113,57,98,116,75,114,90,79,119,97,75,70,113,120,75,87,119,90,87,69,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,117,66,121,32,101,120,112,101,114,116,108,121,32,115,121,110,99,105,110,103,32,116,104,101,115,101,32,116,111,111,108,115,44,32,98,117,115,105,110,101,115,115,101,115,32,99,97,110,32,117,110,108,111,99,107,32,97,32,114,97,110,103,101,32,111,102,32,98,101,110,101,102,105,116,115,46,32,70,111,114,32,101,120,97,109,112,108,101,44,32,105,110,116,101,103,114,97,116,105,110,103,32,99,117,115,116,111,109,101,114,46,46,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,213,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,101,120,112,101,114,116,108,121,45,115,121,110,99,101,100,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,121,111,117,45,114,101,108,121,45,111,110,45,114,101,115,117,108,116,115,45,121,111,117,45,115,101,101,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,76,87,122,87,99,66,90,70,57,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,121,108,76,79,83,106,120,86,79,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,2,0,13,0,0,0,2,105,100,10,0,0,0,9,109,117,74,77,117,66,78,114,84,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,55,69,120,112,101,114,116,108,121,32,83,121,110,99,32,89,111,117,114,32,78,101,101,100,115,32,119,105,116,104,32,116,104,101,32,84,111,111,108,115,32,102,111,114,32,66,105,103,32,82,101,115,117,108,116,115,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,55,101,120,112,101,114,116,108,121,45,115,121,110,99,45,121,111,117,114,45,110,101,101,100,115,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,102,111,114,45,98,105,103,45,114,101,115,117,108,116,115,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,127,61,160,116,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,97,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,82,83,82,80,78,104,102,52,113,105,50,111,119,103,65,99,80,107,48,50,69,54,106,49,51,81,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,76,49,52,48,37,32,104,97,115,32,98,101,99,111,109,101,32,116,104,105,115,32,109,117,99,104,32,111,102,32,97,32,112,111,115,115,105,98,108,101,32,99,111,117,110,116,32,102,111,114,32,121,111,117,114,32,98,117,115,105,110,101,115,115,32,110,97,100,32,104,111,119,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,211,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,104,97,114,109,111,110,105,111,117,115,108,121,45,99,111,110,110,101,99,116,101,100,45,116,111,45,116,104,101,45,116,111,111,108,115,45,101,110,115,117,114,105,110,103,45,116,104,101,45,111,117,116,99,111,109,101,115,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,119,100,74,85,89,113,71,51,68,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,115,101,97,109,108,101,115,115,108,121,45,105,110,116,101,103,114,97,116,101,100,45,116,111,111,108,115,45,100,101,108,105,118,101,114,105,110,103,45,100,101,115,105,114,101,100,45,111,117,116,99,111,109,101,115,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,79,106,67,49,73,115,82,101,77,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,3,0,13,0,0,0,2,105,100,10,0,0,0,9,79,106,67,49,73,115,82,101,77,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,55,83,101,97,109,108,101,115,115,108,121,32,73,110,116,101,103,114,97,116,101,100,32,84,111,111,108,115,32,68,101,108,105,118,101,114,105,110,103,32,68,101,115,105,114,101,100,32,79,117,116,99,111,109,101,115,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,55,115,101,97,109,108,101,115,115,108,121,45,105,110,116,101,103,114,97,116,101,100,45,116,111,111,108,115,45,100,101,108,105,118,101,114,105,110,103,45,100,101,115,105,114,101,100,45,111,117,116,99,111,109,101,115,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,204,84,140,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,103,121,121,114,49,112,121,116,119,53,104,115,50,120,84,54,99,103,119,83,73,119,78,112,73,46,119,101,98,112,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,79,79,114,103,97,110,105,99,32,115,101,97,114,99,104,32,105,115,32,116,104,101,32,101,114,97,226,128,153,115,32,99,104,97,108,108,101,110,103,101,32,116,111,32,98,114,105,110,103,32,121,111,117,32,119,111,114,107,32,111,117,116,32,116,111,32,116,104,101,32,119,111,114,108,100,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,216,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,115,121,110,99,45,121,111,117,114,45,104,97,98,105,116,115,45,105,103,110,105,116,101,45,121,111,117,114,45,105,110,110,101,114,45,115,112,97,114,107,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,90,65,116,115,119,50,71,114,95,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,202,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,114,101,45,114,117,110,110,105,110,103,45,111,110,45,101,109,112,116,121,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,74,99,85,111,54,110,114,50,75,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,4,0,13,0,0,0,2,105,100,10,0,0,0,9,88,84,49,54,67,88,118,79,73,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,57,66,101,32,77,111,114,101,32,89,111,117,114,115,101,108,102,58,32,54,32,83,105,103,110,115,32,89,111,117,32,78,101,101,100,32,97,32,66,111,111,115,116,32,111,102,32,86,105,116,97,109,105,110,32,66,54,32,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,57,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,45,51,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,75,149,144,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,77,49,115,68,99,57,109,86,98,99,55,101,88,49,66,118,90,78,109,118,100,107,109,122,122,89,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,73,70,105,110,100,32,111,117,116,32,97,110,121,32,112,114,111,115,32,97,110,100,32,99,111,110,115,32,115,105,109,112,108,121,32,116,104,114,111,119,105,110,103,32,102,101,119,32,115,112,114,105,110,116,32,119,105,116,104,32,121,111,117,114,32,116,101,97,109,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,115,101,97,109,108,101,115,115,108,121,45,105,110,116,101,103,114,97,116,101,100,45,116,111,111,108,115,45,100,101,108,105,118,101,114,105,110,103,45,100,101,115,105,114,101,100,45,111,117,116,99,111,109,101,115,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,79,106,67,49,73,115,82,101,77,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,211,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,45,51,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,88,84,49,54,67,88,118,79,73,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,5,0,13,0,0,0,2,105,100,10,0,0,0,9,74,99,85,111,54,110,114,50,75,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,49,66,101,32,77,111,114,101,32,89,111,117,114,115,101,108,102,58,32,54,32,83,105,103,110,115,32,89,111,117,39,114,101,32,82,117,110,110,105,110,103,32,111,110,32,69,109,112,116,121,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,48,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,114,101,45,114,117,110,110,105,110,103,45,111,110,45,101,109,112,116,121,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,75,149,144,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,98,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,117,82,88,105,112,73,111,75,74,68,49,118,65,77,102,97,119,108,101,114,100,50,53,81,50,110,115,46,119,101,98,112,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,103,77,97,114,107,101,116,32,100,111,109,105,110,97,116,101,100,32,98,121,32,101,115,116,97,98,108,105,115,104,101,100,32,99,111,109,112,101,116,105,116,111,114,115,46,32,84,104,101,121,32,110,101,101,100,101,100,32,116,111,32,114,97,105,115,101,32,98,114,97,110,100,32,97,119,97,114,101,110,101,115,115,44,32,103,101,110,101,114,97,116,101,32,108,101,97,100,46,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,202,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,114,101,45,114,117,110,110,105,110,103,45,111,110,45,101,109,112,116,121,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,74,99,85,111,54,110,114,50,75,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,216,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,115,121,110,99,45,121,111,117,114,45,104,97,98,105,116,115,45,105,103,110,105,116,101,45,121,111,117,114,45,105,110,110,101,114,45,115,112,97,114,107,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,90,65,116,115,119,50,71,114,95,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,6,0,13,0,0,0,2,105,100,10,0,0,0,9,90,65,116,115,119,50,71,114,95,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,65,66,101,32,77,111,114,101,32,89,111,117,58,32,83,121,110,99,32,89,111,117,114,32,72,97,98,105,116,115,44,32,73,103,110,105,116,101,32,89,111,117,114,32,73,110,110,101,114,32,83,112,97,114,107,32,32,112,101,110,95,115,112,97,114,107,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,62,98,101,45,109,111,114,101,45,121,111,117,45,115,121,110,99,45,121,111,117,114,45,104,97,98,105,116,115,45,105,103,110,105,116,101,45,121,111,117,114,45,105,110,110,101,114,45,115,112,97,114,107,45,112,101,110,45,115,112,97,114,107,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,75,149,144,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,83,85,56,69,79,86,113,57,98,116,75,114,90,79,119,97,75,70,113,120,75,87,119,90,87,69,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,107,79,118,101,114,97,108,108,32,98,117,115,105,110,101,115,115,32,115,116,114,97,116,101,103,121,32,97,110,100,32,111,98,106,101,99,116,105,118,101,115,46,32,72,105,103,104,108,105,103,104,116,32,104,111,119,32,115,116,114,97,116,101,103,105,99,32,67,82,77,32,115,117,112,112,111,114,116,115,32,107,101,121,32,98,117,115,105,110,101,115,115,32,103,111,97,108,115,32,115,117,99,104,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,211,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,45,51,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,88,84,49,54,67,88,118,79,73,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,220,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,104,97,114,109,111,110,105,122,101,45,121,111,117,114,45,104,97,98,105,116,115,45,117,110,108,101,97,115,104,45,121,111,117,114,45,116,114,117,101,45,115,101,108,102,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,84,110,83,111,111,119,108,78,83,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,7,0,13,0,0,0,2,105,100,10,0,0,0,9,84,110,83,111,111,119,108,78,83,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,69,66,101,32,77,111,114,101,32,89,111,117,58,32,72,97,114,109,111,110,105,122,101,32,89,111,117,114,32,72,97,98,105,116,115,44,32,85,110,108,101,97,115,104,32,89,111,117,114,32,84,114,117,101,32,83,101,108,102,32,32,112,101,110,95,115,112,97,114,107,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,66,98,101,45,109,111,114,101,45,121,111,117,45,104,97,114,109,111,110,105,122,101,45,121,111,117,114,45,104,97,98,105,116,115,45,117,110,108,101,97,115,104,45,121,111,117,114,45,116,114,117,101,45,115,101,108,102,45,112,101,110,45,115,112,97,114,107,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,127,138,223,216,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,78,79,116,71,50,48,107,71,51,79,97,79,79,50,109,67,77,87,52,69,104,109,110,102,109,89,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,95,67,111,110,116,105,110,117,111,117,115,108,121,32,115,101,101,107,32,110,101,119,32,105,100,101,97,115,44,32,97,112,112,114,111,97,99,104,101,115,44,32,97,110,100,32,116,101,99,104,110,111,108,111,103,105,101,115,32,116,111,32,115,116,97,121,32,97,104,101,97,100,32,111,102,32,116,104,101,32,99,117,114,118,101,32,97,110,100,46,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,216,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,115,121,110,99,45,121,111,117,114,45,104,97,98,105,116,115,45,105,103,110,105,116,101,45,121,111,117,114,45,105,110,110,101,114,45,115,112,97,114,107,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,90,65,116,115,119,50,71,114,95,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,121,108,76,79,83,106,120,86,79,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,8,0,13,0,0,0,2,105,100,10,0,0,0,9,69,104,79,57,102,67,54,100,111,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,76,85,110,109,97,115,107,105,110,103,32,116,104,101,32,73,109,112,111,115,116,101,114,58,32,54,32,83,105,103,110,115,32,89,111,117,114,32,73,110,110,101,114,32,83,112,97,114,107,32,78,101,101,100,115,32,97,32,86,105,116,97,109,105,110,32,66,54,32,82,101,99,104,97,114,103,101,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,75,117,110,109,97,115,107,105,110,103,45,116,104,101,45,105,109,112,111,115,116,101,114,45,54,45,115,105,103,110,115,45,121,111,117,114,45,105,110,110,101,114,45,115,112,97,114,107,45,110,101,101,100,115,45,97,45,118,105,116,97,109,105,110,45,98,54,45,114,101,99,104,97,114,103,101,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,75,149,144,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,114,109,101,65,78,86,88,69,116,113,50,118,56,108,103,104,109,121,79,77,85,100,74,69,89,52,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,80,67,82,77,32,103,111,101,115,32,98,101,121,111,110,100,32,116,114,97,100,105,116,105,111,110,97,108,32,116,114,97,110,115,97,99,116,105,111,110,97,108,32,97,112,112,114,111,97,99,104,101,115,32,116,111,32,102,111,99,117,115,32,111,110,32,108,111,110,103,45,116,101,114,109,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,220,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,104,97,114,109,111,110,105,122,101,45,121,111,117,114,45,104,97,98,105,116,115,45,117,110,108,101,97,115,104,45,121,111,117,114,45,116,114,117,101,45,115,101,108,102,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,84,110,83,111,111,119,108,78,83,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,213,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,101,120,112,101,114,116,108,121,45,115,121,110,99,101,100,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,121,111,117,45,114,101,108,121,45,111,110,45,114,101,115,117,108,116,115,45,121,111,117,45,115,101,101,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,76,87,122,87,99,66,90,70,57,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,9,0,13,0,0,0,2,105,100,10,0,0,0,9,78,114,119,106,118,49,56,104,74,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,68,85,110,109,97,115,107,105,110,103,32,116,104,101,32,73,109,112,111,115,116,101,114,58,32,69,120,112,101,114,116,108,121,32,83,121,110,99,32,89,111,117,114,32,68,105,101,116,32,102,111,114,32,97,110,32,65,117,116,104,101,110,116,105,99,32,89,111,117,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,67,117,110,109,97,115,107,105,110,103,45,116,104,101,45,105,109,112,111,115,116,101,114,45,101,120,112,101,114,116,108,121,45,115,121,110,99,45,121,111,117,114,45,100,105,101,116,45,102,111,114,45,97,110,45,97,117,116,104,101,110,116,105,99,45,121,111,117,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,128,6,120,120,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,103,51,108,76,117,115,56,56,118,99,106,105,54,112,107,73,119,98,81,102,116,57,99,72,116,56,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,93,84,104,101,115,101,32,116,111,111,108,115,32,101,110,97,98,108,101,32,121,111,117,32,116,111,32,116,114,97,99,107,32,82,79,73,32,105,110,32,114,101,97,108,45,116,105,109,101,44,32,117,110,99,111,118,101,114,32,105,110,115,105,103,104,116,115,44,32,97,110,100,32,109,97,107,101,32,100,97,116,97,45,100,114,105,118,101,110,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,121,108,76,79,83,106,120,86,79,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,211,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,104,97,114,109,111,110,105,111,117,115,108,121,45,99,111,110,110,101,99,116,101,100,45,116,111,45,116,104,101,45,116,111,111,108,115,45,101,110,115,117,114,105,110,103,45,116,104,101,45,111,117,116,99,111,109,101,115,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,119,100,74,85,89,113,71,51,68,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,10,0,13,0,0,0,2,105,100,10,0,0,0,9,100,55,88,103,103,81,114,89,111,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,73,84,104,101,32,65,117,116,104,101,110,116,105,99,32,89,111,117,32,65,119,97,105,116,115,58,32,72,97,114,109,111,110,105,122,101,32,89,111,117,114,32,72,97,98,105,116,115,44,32,85,110,108,101,97,115,104,32,89,111,117,114,32,73,110,110,101,114,32,83,112,97,114,107,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,59,104,97,114,109,111,110,105,111,117,115,108,121,45,99,111,110,110,101,99,116,101,100,45,116,111,45,116,104,101,45,116,111,111,108,115,45,101,110,115,117,114,105,110,103,45,116,104,101,45,111,117,116,99,111,109,101,115,45,52,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,127,138,223,216,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,96,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,83,85,56,69,79,86,113,57,98,116,75,114,90,79,119,97,75,70,113,120,75,87,119,90,87,69,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,0,92,67,104,97,108,108,101,110,103,101,32,116,104,101,32,110,111,116,105,111,110,32,111,102,32,119,104,97,116,32,105,115,32,112,111,115,115,105,98,108,101,32,97,110,100,32,100,97,114,101,32,116,111,32,101,110,118,105,115,105,111,110,32,97,32,102,117,116,117,114,101,32,116,104,97,116,32,116,114,97,110,115,99,101,110,100,115,46,46,46,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,53,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,213,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,101,120,112,101,114,116,108,121,45,115,121,110,99,101,100,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,121,111,117,45,114,101,108,121,45,111,110,45,114,101,115,117,108,116,115,45,121,111,117,45,115,101,101,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,76,87,122,87,99,66,90,70,57,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,209,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,114,115,101,108,102,45,54,45,115,105,103,110,115,45,121,111,117,45,110,101,101,100,45,97,45,98,111,111,115,116,45,111,102,45,118,105,116,97,109,105,110,45,98,54,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,121,108,76,79,83,106,120,86,79,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,11,0,13,0,0,0,2,105,100,10,0,0,0,9,81,115,114,100,119,77,119,72,95,0,0,0,9,67,57,56,56,109,75,84,113,110,10,0,0,0,130,70,111,115,116,101,114,32,67,111,110,110,101,99,116,105,111,110,115,32,119,105,116,104,32,69,110,116,104,117,115,105,97,115,116,105,99,32,70,111,108,108,111,119,101,114,115,32,71,108,111,98,97,108,108,121,32,105,110,115,105,100,101,32,121,111,117,114,32,114,101,103,117,108,97,114,32,100,97,115,104,98,111,97,114,100,32,97,32,108,111,110,103,32,115,105,100,101,32,112,111,119,101,114,102,117,108,32,116,111,111,108,115,32,102,111,114,32,121,111,117,114,32,98,117,115,105,110,101,115,115,0,0,0,9,81,76,65,89,84,51,86,103,83,10,0,0,0,130,102,111,115,116,101,114,45,99,111,110,110,101,99,116,105,111,110,115,45,119,105,116,104,45,101,110,116,104,117,115,105,97,115,116,105,99,45,102,111,108,108,111,119,101,114,115,45,103,108,111,98,97,108,108,121,45,105,110,115,105,100,101,45,121,111,117,114,45,114,101,103,117,108,97,114,45,100,97,115,104,98,111,97,114,100,45,97,45,108,111,110,103,45,115,105,100,101,45,112,111,119,101,114,102,117,108,45,116,111,111,108,115,45,102,111,114,45,121,111,117,114,45,98,117,115,105,110,101,115,115,0,0,0,9,117,83,90,48,65,106,68,66,65,3,0,0,1,126,75,149,144,0,0,0,0,9,76,66,73,78,112,98,108,53,97,6,0,0,0,97,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,65,118,114,88,89,70,54,76,67,109,65,118,100,77,109,57,118,114,67,97,104,50,72,53,101,72,85,46,112,110,103,34,44,34,97,108,116,34,58,34,66,108,111,103,32,73,109,97,103,101,34,125,0,0,0,9,84,72,83,115,81,109,66,90,86,10,0,0,1,0,73,110,32,116,111,100,97,121,39,115,32,102,97,115,116,45,112,97,99,101,100,32,100,105,103,105,116,97,108,32,108,97,110,100,115,99,97,112,101,44,32,104,97,118,105,110,103,32,97,32,115,111,108,105,100,32,109,97,114,107,101,116,105,110,103,32,115,116,114,97,116,101,103,121,32,105,115,32,99,114,117,99,105,97,108,32,102,111,114,32,98,117,115,105,110,101,115,115,101,115,32,116,111,32,115,116,97,121,32,99,111,109,112,101,116,105,116,105,118,101,32,97,110,100,32,101,102,102,101,99,116,105,118,101,108,121,32,114,101,97,99,104,32,116,104,101,105,114,32,116,97,114,103,101,116,32,97,117,100,105,101,110,99,101,46,32,87,104,101,116,104,101,114,32,121,111,117,39,114,101,32,97,32,115,109,97,108,108,32,115,116,97,114,116,117,112,32,111,114,32,97,32,108,97,114,103,101,32,99,111,114,112,111,114,97,116,105,111,110,44,32,104,101,114,101,32,97,114,101,32,102,105,118,101,32,101,115,115,101,110,116,105,97,108,32,101,108,101,109,101,110,116,115,46,46,46,0,0,0,9,106,82,86,81,98,89,81,122,122,10,0,0,0,10,74,111,104,110,32,83,109,105,116,104,0,0,0,9,113,74,75,121,72,116,95,102,115,10,0,0,0,18,67,69,79,32,111,102,32,88,89,90,32,67,111,109,112,97,110,121,0,0,0,9,86,104,121,89,70,80,84,83,118,6,0,0,0,255,123,34,115,114,99,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,34,44,34,115,114,99,83,101,116,34,58,34,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,63,115,99,97,108,101,45,100,111,119,110,45,116,111,61,53,49,50,32,53,49,50,119,44,104,116,116,112,115,58,47,47,102,114,97,109,101,114,117,115,101,114,99,111,110,116,101,110,116,46,99,111,109,47,105,109,97,103,101,115,47,68,49,68,104,77,57,97,52,56,68,69,118,114,117,52,48,108,87,87,67,82,98,53,103,104,119,46,119,101,98,112,32,55,55,49,119,34,125,0,0,0,9,77,85,68,110,106,120,100,90,110,10,0,0,0,6,51,32,77,105,110,115,0,0,0,9,79,81,116,100,66,98,117,65,79,7,0,0,0,220,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,98,101,45,109,111,114,101,45,121,111,117,45,104,97,114,109,111,110,105,122,101,45,121,111,117,114,45,104,97,98,105,116,115,45,117,110,108,101,97,115,104,45,121,111,117,114,45,116,114,117,101,45,115,101,108,102,45,112,101,110,45,115,112,97,114,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,84,110,83,111,111,119,108,78,83,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,104,49,65,86,73,119,88,95,56,7,0,0,0,213,123,34,119,101,98,80,97,103,101,73,100,34,58,34,100,104,116,101,108,79,50,54,120,34,44,34,112,97,116,104,86,97,114,105,97,98,108,101,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,34,101,120,112,101,114,116,108,121,45,115,121,110,99,101,100,45,119,105,116,104,45,116,104,101,45,116,111,111,108,115,45,121,111,117,45,114,101,108,121,45,111,110,45,114,101,115,117,108,116,115,45,121,111,117,45,115,101,101,107,34,125,44,34,117,110,114,101,115,111,108,118,101,100,80,97,116,104,83,108,117,103,115,34,58,123,34,81,76,65,89,84,51,86,103,83,34,58,123,34,99,111,108,108,101,99,116,105,111,110,73,116,101,109,73,100,34,58,34,76,87,122,87,99,66,90,70,57,34,44,34,99,111,108,108,101,99,116,105,111,110,73,100,34,58,34,119,75,87,79,115,75,84,87,88,34,125,125,125,0,0,0,9,101,116,88,113,88,48,75,67,95,9,0,0,0,12],indexes:[new R({collation:{type:1},collectionSchema:D,fieldNames:["id","etXqX0KC_"],range:{from:0,to:272},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["C988mKTqn","etXqX0KC_"],range:{from:272,to:847},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["QLAYT3VgS","etXqX0KC_"],range:{from:847,to:1372},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["uSZ0AjDBA","etXqX0KC_"],range:{from:1372,to:1542},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["LBINpbl5a","etXqX0KC_"],range:{from:1542,to:2005},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["THSsQmBZV","etXqX0KC_"],range:{from:2005,to:2955},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["jRVQbYQzz","etXqX0KC_"],range:{from:2955,to:3106},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["qJKyHt_fs","etXqX0KC_"],range:{from:3106,to:3268},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["VhyYFPTSv","etXqX0KC_"],range:{from:3268,to:3566},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["MUDnjxdZn","etXqX0KC_"],range:{from:3566,to:3716},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["OQtdBbuAO","etXqX0KC_"],range:{from:3716,to:4309},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["h1AVIwX_8","etXqX0KC_"],range:{from:4309,to:4908},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href}),new R({collation:{type:0},collectionSchema:D,fieldNames:["etXqX0KC_","etXqX0KC_"],range:{from:4908,to:5046},url:new URL("./wKWOsKTWX-indexes-default.framercms","https://framerusercontent.com/modules/m9O6gVsObJwBtouUmXZt/vKzOi5pvZqkyEt2l0CIw/wKWOsKTWX.js").href})],resolveRichText:te,schema:D})},displayName:"Blog"},O4=P1;y0(P1,{C988mKTqn:{defaultValue:"",title:"Title",type:m.String},QLAYT3VgS:{title:"Slug",type:m.String},uSZ0AjDBA:{defaultValue:"",title:"Date",type:m.Date},LBINpbl5a:{title:"Image",type:m.ResponsiveImage},THSsQmBZV:{defaultValue:"Lorem ipsum dolor sit amet consectetur. Volutpat aliquam nullam non scelerisque pretium.....",title:"Excerpt",type:m.String},jRVQbYQzz:{defaultValue:"John Smith",title:"User Name",type:m.String},qJKyHt_fs:{defaultValue:"CEO of XYZ Company",title:"User Position",type:m.String},VhyYFPTSv:{__defaultAssetReference:"data:framer/asset-reference,D1DhM9a48DEvru40lWWCRb5ghw.webp?originalFilename=Rectangle.webp&preferredSize=auto",title:"User Image",type:m.ResponsiveImage},MUDnjxdZn:{defaultValue:"5 Mins",title:"Read Time",type:m.String},OQtdBbuAO:{title:"Previous Link",type:m.Link},h1AVIwX_8:{title:"Next Link",type:m.Link},etXqX0KC_:{defaultValue:"",title:"Content",type:m.RichText}});var L4={},B4={async getSlugByRecordId(e,t){let[r]=await re.query({from:{data:P1,type:"Collection"},limit:{type:"LiteralValue",value:1},select:[{name:"QLAYT3VgS",type:"Identifier"}],where:{left:{name:"id",type:"Identifier"},operator:"==",right:{type:"LiteralValue",value:e},type:"BinaryOperation"}},t);return r?.QLAYT3VgS},async getRecordIdBySlug(e,t){let[r]=await re.query({from:{data:P1,type:"Collection"},limit:{type:"LiteralValue",value:1},select:[{name:"id",type:"Identifier"}],where:{left:{name:"QLAYT3VgS",type:"Identifier"},operator:"==",right:{type:"LiteralValue",value:e},type:"BinaryOperation"}},t);return r?.id}},E4={exports:{default:{type:"data",name:"data",annotations:{framerEnumToDisplayNameUtils:"2",framerSlug:"QLAYT3VgS",framerContractVersion:"1",framerCollectionId:"wKWOsKTWX",framerRecordIdKey:"id",framerCollectionUtils:"1",framerData:""}},enumToDisplayNameFunctions:{type:"variable",annotations:{framerContractVersion:"1"}},utils:{type:"variable",annotations:{framerContractVersion:"1"}},__FramerMetadata__:{type:"variable"}}};export{O4 as a,L4 as b,B4 as c,E4 as d};
//# sourceMappingURL=chunk-RRRTFJXR.mjs.map
